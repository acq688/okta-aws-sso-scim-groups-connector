AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  okta-aws-sso-sicm

  Sample SAM Template for okta-aws-sso-sicm

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:

  Secrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "Contains the secrets expected to be provided by Okta and required by AWS SSO."
      Name: app/okta-to-aws-sso
      GenerateSecretString:
        SecretStringTemplate: "{\"aws_sso_scim_key\": \"<MUST BE PROVIDED>\"}"
        GenerateStringKey: "auth_token_for_okta"
        PasswordLength: 128

  OktaEventsApi:
    Type: "AWS::Serverless::Api"
    Properties:
      StageName: Prod
      Cors:
        AllowOrigin: "'https://britecore.okta.com'"
      Auth:
        DefaultAuthorizer: TokenAuth
        Authorizers:
          TokenAuth:
            FunctionArn: !GetAtt TokenAuthorizer.Arn
        ApiKeyRequired: true # sets for all methods
        UsagePlan:
          CreateUsagePlan: "PER_API"


  EventHookVerifier:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: app/
      Handler: verify.lambda_handler
      Runtime: python3.8
      Events:
        Verify:
          Type: Api
          Properties:
            RestApiId: !Ref OktaEventsApi
            Path: /
            Method: get

  EventProcessor:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app/
      Handler: processor.lambda_handler
      Runtime: python3.8
      Events:
        OktaEvent: # Should just be group member added/group member removed, but unfiltered.
          Type: Api
          Properties:
            RestApiId: !Ref OktaEventsApi
            Path: /
            Method: post

  TokenAuthorizer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app
      Handler: authorizer.lambda_handler
      Runtime: python3.8

Outputs:
  OktaEventsApi:
    Description: "API Gateway endpoint URL for Prod stage for OktaEventsApi"
    Value: !Sub "https://${OktaEventsApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  EventHookVerifier:
    Description: "Perform initial endpoint verification with Okta"
    Value: !GetAtt EventHookVerifier.Arn
  EventHookVerifierIamRole:
    Description: "Implicit IAM Role created for EventHookVerifier function"
    Value: !GetAtt EventHookVerifierRole.Arn
  EventProcessor:
    Description: "Process events from Okta (specifically interesting group membership changes"
    Value: !GetAtt EventProcessor.Arn
  EventProcessorIamRole:
    Description: "Implicit IAM Role created for EventHookVerifier function"
    Value: !GetAtt EventProcessorRole.Arn
